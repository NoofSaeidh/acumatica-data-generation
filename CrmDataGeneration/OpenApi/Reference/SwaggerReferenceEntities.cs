//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v11.17.3.0 (NJsonSchema v9.10.46.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace CrmDataGeneration.OpenApi.Reference
{
    #pragma warning disable // Disable all warnings

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LongValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static LongValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<LongValue>(data);
        }
    
    }
    
    [Newtonsoft.Json.JsonConverter(typeof(JsonInheritanceConverter), "type")]
    [JsonInheritanceAttribute("CustomStringField", typeof(CustomStringField))]
    [JsonInheritanceAttribute("CustomDecimalField", typeof(CustomDecimalField))]
    [JsonInheritanceAttribute("CustomDateTimeField", typeof(CustomDateTimeField))]
    [JsonInheritanceAttribute("CustomBooleanField", typeof(CustomBooleanField))]
    [JsonInheritanceAttribute("CustomIntField", typeof(CustomIntField))]
    [JsonInheritanceAttribute("CustomLongField", typeof(CustomLongField))]
    [JsonInheritanceAttribute("CustomShortField", typeof(CustomShortField))]
    [JsonInheritanceAttribute("CustomByteField", typeof(CustomByteField))]
    [JsonInheritanceAttribute("CustomDoubleField", typeof(CustomDoubleField))]
    [JsonInheritanceAttribute("CustomGuidField", typeof(CustomGuidField))]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomField 
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomStringField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomStringField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomStringField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomDecimalField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomDecimalField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomDecimalField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomDateTimeField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomDateTimeField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomDateTimeField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomBooleanField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomBooleanField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomBooleanField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomIntField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomIntField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomIntField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomLongField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomLongField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomLongField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomShortField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomShortField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomShortField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomByteField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomByteField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomByteField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomDoubleField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomDoubleField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomDoubleField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomGuidField : CustomField
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomGuidField FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomGuidField>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FileLink 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("filename", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Filename { get; set; }
    
        [Newtonsoft.Json.JsonProperty("href", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Href { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FileLink FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FileLink>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Entity 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("rowNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? RowNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Note { get; set; }
    
        [Newtonsoft.Json.JsonProperty("custom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, CustomField>> Custom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("files", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<FileLink> Files { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Entity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Entity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class HttpError 
    {
        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("messageDetail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MessageDetail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("exceptionMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExceptionMessage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("exceptionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ExceptionType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("stackTrace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StackTrace { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modelState", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> ModelState { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static HttpError FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<HttpError>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StringValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static StringValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StringValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DecimalValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DecimalValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DecimalValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DateTimeValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DateTimeValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DateTimeValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BooleanValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BooleanValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BooleanValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class IntValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IntValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IntValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShortValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShortValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShortValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ByteValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ByteValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ByteValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DoubleValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DoubleValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DoubleValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class GuidValue 
    {
        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static GuidValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<GuidValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Account : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountCD", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountCD { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountGroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue AccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ChartOfAccountsOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ChartOfAccountsOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ConsolidationAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ConsolidationAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostOption", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostOption { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireUnits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireUnits { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RevaluationRateType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RevaluationRateType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Secured", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Secured { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseDefaultSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseDefaultSubaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Account FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Account>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountByPeriodInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinancialYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FinancialYear { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AccountByPeriodRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountByPeriodInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountByPeriodInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountByPeriodRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("BeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyBeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyBeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyCreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyCreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyDebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyDebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyEndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyEndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyPtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyPtdTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LedgerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LedgerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Period", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Period { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PtdTotal { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountByPeriodRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountByPeriodRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountBySubaccountInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Period", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Period { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AccountBySubaccountRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountBySubaccountInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountBySubaccountInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountBySubaccountRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("BeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyBeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyBeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyCreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyCreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyDebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyDebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyEndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyEndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyPtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyPtdTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LedgerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LedgerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PtdTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountBySubaccountRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountBySubaccountRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountDetailsInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue FromDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeReclassified", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeReclassified { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeUnposted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeUnposted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeUnreleased", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeUnreleased { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PeriodEndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PeriodStartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AccountDetailsRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ToDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Turnover { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountDetailsInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountDetailsInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountDetailsRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyBeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyBeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyCreditAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyCreditAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyDebitAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyDebitAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyEndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyEndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludedinReclassHistory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludedinReclassHistory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Period", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Period { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReclassBatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReclassBatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Selected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Selected { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TransactionDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorOrCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorOrCustomer { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountDetailsRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountDetailsRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountLocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address Address { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddressSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ARAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ARSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Calendar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Calendar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Cases", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CaseDetail> Cases { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AccountLocationContact Contact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultProject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultProject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntityUsageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntityUsageType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FedExGroundCollect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FedExGroundCollect { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Insurance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Insurance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimeInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimeInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Opportunities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<OpportunityDetail> Opportunities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderPriority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue OrderPriority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SameAsDefaultLocation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SameAsDefaultLocation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxExemptionNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxExemptionNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRegistrationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxRegistrationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountLocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountLocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountLocationContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attention", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Attention { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompanyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CompanyName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FaxType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WebSite { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountLocationContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountLocationContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountSummaryInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Period", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Period { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AccountSummaryRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountSummaryInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountSummaryInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AccountSummaryRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ConsolidationAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ConsolidationAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyBeginingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyBeginingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyCreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyCreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyDebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyDebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyEndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyEndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyPtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyPtdTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndingBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EndingBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LastActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LedgerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LedgerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PtdTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PtdTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AccountSummaryRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AccountSummaryRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ActivityDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("ClassIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatorUsername", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatorUsername { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsCompleteIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue IsCompleteIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriorityIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriorityIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RefNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue RefNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReminderIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReminderIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ActivityDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ActivityDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Address : Entity
    {
        [Newtonsoft.Json.JsonProperty("AddressLine1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AddressLine1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressLine2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AddressLine2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("City", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Country { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostalCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostalCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("State", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue State { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Address FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Address>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Adjustment : Entity
    {
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AdjustmentDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExternalRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalQty { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Adjustment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Adjustment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AdjustmentDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceiptNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AdjustmentDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AdjustmentDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AttributeDefinition : Entity
    {
        [Newtonsoft.Json.JsonProperty("AttributeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AttributeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ControlType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntryMask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntryMask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Internal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Internal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RegExp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RegExp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Values", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDefinitionValue> Values { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AttributeDefinition FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AttributeDefinition>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AttributeDefinitionValue : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Disabled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Disabled { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SortOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue SortOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ValueID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ValueID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AttributeDefinitionValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AttributeDefinitionValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AttributeDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Attribute { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RefNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue RefNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Required", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AttributeDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AttributeDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AttributeValue : Entity
    {
        [Newtonsoft.Json.JsonProperty("AttributeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AttributeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Required", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AttributeValue FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AttributeValue>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Bill : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Applications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BillApplicationDetail> Applications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApprovedForPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ApprovedForPayment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BillDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BillTaxDetail> TaxDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Vendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorRef { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Bill FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Bill>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BillApplicationDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BillApplicationDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BillApplicationDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BillDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonBillable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NonBillable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POOrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POOrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POOrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POOrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BillDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BillDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BillTaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("TaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxRate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BillTaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BillTaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BillToSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("BillToAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address BillToAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToAddressOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillToAddressOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DocContact BillToContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToContactOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillToContactOverride { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BillToSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BillToSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BoxStockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("BoxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BoxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BoxStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BoxStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccount : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Activities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountActivityDetail> Activities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Campaigns", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CampaignDetail> Campaigns { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Cases", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountCaseDetail> Cases { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountContact> Contacts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contracts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountContract> Contracts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultLocationSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BusinessAccountDefaultLocationSetting DefaultLocationSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Duplicate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DuplicateDetail> Duplicates { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastIncomingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastIncomingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastOutgoingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastOutgoingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Locations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountLocation> Locations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MainAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address MainAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MainAddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue MainAddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MainContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BusinessAccountMainContact MainContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarketingLists", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountMarketingListDetail> MarketingLists { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Opportunities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountOpportunityDetail> Opportunities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Orders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountOrder> Orders { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OwnerEmployeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OwnerEmployeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Relations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RelationDetail> Relations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address ShippingAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingAddressSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippingAddressSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingAddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippingAddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BusinessAccountShippingContact ShippingContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourceCampaign", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SourceCampaign { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupDescription { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountActivityDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("ClassIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatorUsername", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatorUsername { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsCompleteIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue IsCompleteIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriorityIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriorityIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RefNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue RefNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedEntityDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntityDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReminderIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReminderIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountActivityDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountActivityDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountCaseDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ClosingDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contract", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Contract { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DateReported", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DateReported { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Estimation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Estimation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InitialResponse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InitialResponse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Severity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Severity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountCaseDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountCaseDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountClassAttributeDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AttributeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AttributeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultValue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Required", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SortOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue SortOrder { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountClassAttributeDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountClassAttributeDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("City", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("JobTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue JobTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountContract : Entity
    {
        [Newtonsoft.Json.JsonProperty("BusinessAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContractID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContractID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountContract FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountContract>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountDefaultLocationSetting : Entity
    {
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Insurance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Insurance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimeInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimeInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderPriority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue OrderPriority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRegistrationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxRegistrationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountDefaultLocationSetting FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountDefaultLocationSetting>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountLocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("City", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue City { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Country { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Default", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Default { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("State", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountLocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountLocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountMainContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("CompanyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CompanyName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("JobTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue JobTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LanguageOrLocale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LanguageOrLocale { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Web", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Web { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountMainContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountMainContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountMarketingListDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DynamicList", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DynamicList { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Format", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Format { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ListName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ListName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarketingListID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue MarketingListID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MemberName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MemberName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subscribed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Subscribed { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountMarketingListDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountMarketingListDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountOpportunityDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BusinessAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Estimation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Estimation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Probability", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Probability { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Stage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Stage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Total", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Total { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountOpportunityDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountOpportunityDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountOrder : Entity
    {
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequestedOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue RequestedOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ScheduledShipment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ScheduledShipment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountPaymentInstructionDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentInstructionsID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentInstructionsID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountPaymentInstructionDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountPaymentInstructionDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class BusinessAccountShippingContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("JobTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue JobTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SameasMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SameasMain { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static BusinessAccountShippingContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<BusinessAccountShippingContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CampaignDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CampaignID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CampaignID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CampaignName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CampaignName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Stage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Stage { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CampaignDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CampaignDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Carrier : Entity
    {
        [Newtonsoft.Json.JsonProperty("CarrierID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CarrierID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CarrierUnitOfWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CarrierUnitOfWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CarrierCustomerAccount> CustomerAccounts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PlugInParameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CarrierPluginParameter> PlugInParameters { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PlugInType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PlugInType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Carrier FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Carrier>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CarrierCustomerAccount : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CarrierAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CarrierAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostalCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostalCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CarrierCustomerAccount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CarrierCustomerAccount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CarrierPluginParameter : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PluginID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PluginID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CarrierPluginParameter FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CarrierPluginParameter>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Case : Entity
    {
        [Newtonsoft.Json.JsonProperty("Activities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CaseActivityDetail> Activities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ClosingDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contract", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Contract { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DateReported", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DateReported { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InitialResponse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InitialResponse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastActivityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastActivityDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastIncomingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastIncomingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastOutgoingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastOutgoingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OvertimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OvertimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OwnerEmployeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OwnerEmployeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Priority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Priority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedCases", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CaseRelatedCase> RelatedCases { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Relations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RelationDetail> Relations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResolutionTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ResolutionTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Severity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Severity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SLA", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue SLA { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupDescription { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Case FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Case>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CaseActivityDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatedBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsCompleteIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue IsCompleteIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriorityIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriorityIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RefNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue RefNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReminderIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReminderIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CaseActivityDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CaseActivityDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CaseDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ClosingDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DateReported", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DateReported { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Estimation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Estimation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InitialResponse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InitialResponse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Severity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Severity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CaseDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CaseDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CaseRelatedCase : Entity
    {
        [Newtonsoft.Json.JsonProperty("CaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentCaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ParentCaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelationType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelationType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CaseRelatedCase FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CaseRelatedCase>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CashSale : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CashSaleDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CashSale FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CashSale>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CashSaleDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitPrice { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CashSaleDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CashSaleDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CategoryStockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("CategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CategoryID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CategoryStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CategoryStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Check : Entity
    {
        [Newtonsoft.Json.JsonProperty("ApplicationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ApplicationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CheckDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("History", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CheckHistoryDetail> History { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PaymentAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnappliedBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnappliedBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Vendor { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Check FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Check>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CheckDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CheckDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CheckDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CheckHistoryDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountTaken", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountTaken { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorRef { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CheckHistoryDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CheckHistoryDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Commissions : Entity
    {
        [Newtonsoft.Json.JsonProperty("DefaultSalesperson", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultSalesperson { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesPersons", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesPersonDetail> SalesPersons { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Commissions FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Commissions>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Contact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Activities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ActivityDetail> Activities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address Address { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressIsSameAsInAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddressIsSameAsInAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Campaigns", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CampaignDetail> Campaigns { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Cases", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CaseDetail> Cases { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompanyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CompanyName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ConvertedBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ConvertedBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DateOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DateOfBirth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotCall", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotCall { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotFax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotFax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotMail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotMail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Duplicate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DuplicateFound", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DuplicateFound { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ContactDuplicateDetail> Duplicates { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FaxType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Gender", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Gender { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Image", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Image { get; set; }
    
        [Newtonsoft.Json.JsonProperty("JobTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue JobTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LanguageOrLocale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LanguageOrLocale { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastIncomingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastIncomingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastOutgoingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastOutgoingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaritalStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MaritalStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarketingLists", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MarketingListDetail> MarketingLists { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiddleName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MiddleName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoMarketing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NoMarketing { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoMassMail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NoMassMail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Notifications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ContactNotification> Notifications { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Opportunities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<OpportunityDetail> Opportunities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OwnerEmployeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OwnerEmployeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QualificationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue QualificationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Relations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RelationDetail> Relations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourceCampaign", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SourceCampaign { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SpouseOrPartnerName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SpouseOrPartnerName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Synchronize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Synchronize { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserInfo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ContactUserInfo UserInfo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WebSite { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupDescription { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Contact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Contact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContactDuplicateDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Duplicate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContactDuplicateDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContactDuplicateDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContactNotification : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Bcc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Bcc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Format", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Format { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MailingID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MailingID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NotificationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue NotificationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Report", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Report { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Source { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContactNotification FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContactNotification>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContactRoles : Entity
    {
        [Newtonsoft.Json.JsonProperty("RoleDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RoleDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RoleName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RoleName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Selected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Selected { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue UserType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContactRoles FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContactRoles>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContactUserInfo : Entity
    {
        [Newtonsoft.Json.JsonProperty("GeneratePassword", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue GeneratePassword { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Login", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Login { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Password", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Password { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Roles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ContactRoles> Roles { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UserType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContactUserInfo FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContactUserInfo>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContractUsage : Entity
    {
        [Newtonsoft.Json.JsonProperty("BilledTransactions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ContractUsageTransactionDetail> BilledTransactions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContractID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContractID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnbilledTransactions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ContractUsageTransactionDetail> UnbilledTransactions { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContractUsage FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContractUsage>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ContractUsageTransactionDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BillingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue BillingDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CaseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CaseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LongValue TransactionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContractUsageTransactionDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContractUsageTransactionDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreditCardProcessingDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("TransactionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TransactionAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionStatus { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreditCardProcessingDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreditCardProcessingDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreditVerificationRules : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreditDaysPastDue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue CreditDaysPastDue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditLimit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditVerification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditVerification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstDueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue FirstDueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpenOrdersBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OpenOrdersBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemainingCreditLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue RemainingCreditLimit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnreleasedBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnreleasedBalance { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreditVerificationRules FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreditVerificationRules>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Currency : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencySymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencySymbol { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DecimalPrecision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue DecimalPrecision { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseForAccounting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseForAccounting { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Currency FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Currency>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Customer : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplyOverdueCharges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ApplyOverdueCharges { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AutoApplyPayments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AutoApplyPayments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillingAddressSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillingAddressSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillingContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact BillingContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillingContactSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillingContactSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CustomerContact> Contacts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditVerificationRules", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CreditVerificationRules CreditVerificationRules { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableCurrencyOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableCurrencyOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableRateOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableRateOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableWriteOffs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableWriteOffs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimedays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimedays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MainContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact MainContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MultiCurrencyStatements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue MultiCurrencyStatements { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderPriority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue OrderPriority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentRecord", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentRecord { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentInstructions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountPaymentInstructionDetail> PaymentInstructions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintDunningLetters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintDunningLetters { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintInvoices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintInvoices { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintStatements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintStatements { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Salespersons", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CustomerSalesPerson> Salespersons { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendDunningLettersbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendDunningLettersbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendInvoicesbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendInvoicesbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendStatementsbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendStatementsbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingAddressSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippingAddressSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact ShippingContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingContactSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippingContactSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZoneID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatementCycleID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StatementCycleID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatementType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StatementType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRegistrationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxRegistrationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WriteOffLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WriteOffLimit { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Customer FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Customer>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerClass : Entity
    {
        [Newtonsoft.Json.JsonProperty("ApplyOverdueCharges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ApplyOverdueCharges { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ARAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ARSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountClassAttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AutoApplyPayments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AutoApplyPayments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashDiscountAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashDiscountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Country", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Country { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditDaysPastDue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue CreditDaysPastDue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditLimit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditVerification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditVerification { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultLocationIDfromBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DefaultLocationIDfromBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultRestrictionGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultRestrictionGroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableCurrencyOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableCurrencyOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableRateOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableRateOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableWriteOffs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableWriteOffs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntityUsageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntityUsageType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("GroupDocumentDiscountLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue GroupDocumentDiscountLimit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiscAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MiscAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiscSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MiscSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MultiCurrencyStatements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue MultiCurrencyStatements { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverdueChargeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OverdueChargeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverLimitAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OverLimitAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrepaymentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PrepaymentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrepaymentSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PrepaymentSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintDunningLetters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintDunningLetters { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintInvoices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintInvoices { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintStatements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintStatements { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireEntityUsageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireEntityUsageType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireTaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireTaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalespersonID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalespersonID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendDunningLettersbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendDunningLettersbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendInvoicesbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendInvoicesbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendStatementsByEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendStatementsByEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatementCycleID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StatementCycleID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatementType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StatementType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZoneID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnrealizedGainAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UnrealizedGainAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnrealizedGainSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UnrealizedGainSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnrealizedLossAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UnrealizedLossAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnrealizedLossSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UnrealizedLossSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WriteOffLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WriteOffLimit { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerClass FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerClass>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact Contact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerLocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddressSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddressSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Calendar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Calendar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactSameAsMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ContactSameAsMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Customer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Customer { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultProject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultProject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntityUsageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntityUsageType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FedExGroundCollect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FedExGroundCollect { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Insurance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Insurance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimeDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimeDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact LocationContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderPriority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue OrderPriority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxExemptionNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxExemptionNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRegistrationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxRegistrationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerLocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerLocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerPaymentMethod : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CardAccountNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CardAccountNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerProfileID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerProfileID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CustomerPaymentMethodDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InstanceID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue InstanceID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProcCenterID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProcCenterID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerPaymentMethod FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerPaymentMethod>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerPaymentMethodDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerPaymentMethodDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerPaymentMethodDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerPriceClass : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClassID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerPriceClass FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerPriceClass>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CustomerSalesPerson : Entity
    {
        [Newtonsoft.Json.JsonProperty("Commission", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Commission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Default", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Default { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalespersonID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalespersonID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CustomerSalesPerson FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CustomerSalesPerson>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Discount : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BreakBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BreakBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerPriceClasses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountCustomerPriceClassesDetail> CustomerPriceClasses { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Customers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountCustomerDetail> Customers { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountBreakpoints", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountBreakpointDetail> DiscountBreakpoints { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemPriceClasses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountItemPriceClassesDetail> ItemPriceClasses { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Items", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountItemDetail> Items { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Promotional", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Promotional { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProrateDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ProrateDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Sequence", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Sequence { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShowFreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShowFreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DiscountWarehouseDetail> Warehouses { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Discount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Discount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountBreakpointDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountDetailID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue DiscountDetailID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItemQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreeItemQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastBreakAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastBreakAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastBreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastBreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastDiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastDiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastDiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastDiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastFreeItemQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastFreeItemQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingBreakAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingBreakAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingBreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingBreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PendingDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingDiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingDiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingDiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingDiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingFreeItemQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingFreeItemQty { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountBreakpointDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountBreakpointDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountCode : Entity
    {
        [Newtonsoft.Json.JsonProperty("ApplicableTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ApplicableTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCodeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCodeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountCode FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountCode>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountCustomerDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountCustomerDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountCustomerDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountCustomerPriceClassesDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("PriceClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClassID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountCustomerPriceClassesDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountCustomerPriceClassesDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountItemDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountItemDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountItemDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountItemPriceClassesDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("PriceClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClassID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountItemPriceClassesDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountItemPriceClassesDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DiscountWarehouseDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DiscountWarehouseDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DiscountWarehouseDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DocContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attention", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Attention { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DocContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DocContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DuplicateDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccountType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Duplicate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DuplicateContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue DuplicateContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntityType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntityType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DuplicateDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DuplicateDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Email : Entity
    {
        [Newtonsoft.Json.JsonProperty("Bcc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Bcc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Body", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Body { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Cc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Cc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("From", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue From { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromEmailAccountDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromEmailAccountDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromEmailAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue FromEmailAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Incoming", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Incoming { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Internal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Internal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MailStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MailStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Parent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue Parent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentSummary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentSummary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedEntityDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntityDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public EmailTimeActivity TimeActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("To", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue To { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Email FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Email>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EmailProcessing : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountEmailAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountEmailAccountID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AssignedToMe", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AssignedToMe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AssignedToOwner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AssignedToOwner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeFailed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeFailed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<EmailProcessingRow> Result { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EmailProcessing FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EmailProcessing>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EmailProcessingRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("EmailAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EmailAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("From", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue From { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MailStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MailStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Selected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Selected { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("To", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue To { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EmailProcessingRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EmailProcessingRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EmailTimeActivity : Entity
    {
        [Newtonsoft.Json.JsonProperty("Approver", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Approver { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EarningType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EarningType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TrackTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue TrackTime { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EmailTimeActivity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EmailTimeActivity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Employee : Entity
    {
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact Contact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DateOfBirth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DateOfBirth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DepartmentID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DepartmentID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EmployeeClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EmployeeClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EmployeeCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<EmployeeCostRecord> EmployeeCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EmployeeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EmployeeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EmploymentHistory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<EmploymentHistoryRecord> EmploymentHistory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReportsToID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReportsToID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Employee FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Employee>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EmployeeCostRecord : Entity
    {
        [Newtonsoft.Json.JsonProperty("AnnualSalaryAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AnnualSalaryAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("HourlyRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue HourlyRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RegularHoursPerWeek", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue RegularHoursPerWeek { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TypeOfEmployment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TypeOfEmployment { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EmployeeCostRecord FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EmployeeCostRecord>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EmploymentHistoryRecord : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PositionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PositionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RehireEligible", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RehireEligible { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartReason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StartReason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terminated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Terminated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TerminationReason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TerminationReason { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EmploymentHistoryRecord FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EmploymentHistoryRecord>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Event : Entity
    {
        [Newtonsoft.Json.JsonProperty("AllDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AllDay { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attendees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<EventAttendee> Attendees { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Body", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Body { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Internal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Internal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue NoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Priority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Priority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedActivities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<EventRelatedActivity> RelatedActivities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedEntityDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntityDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reminder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReminderDetail Reminder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShowAs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShowAs { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public EventTimeActivity TimeActivity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Event FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Event>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EventAttendee : Entity
    {
        [Newtonsoft.Json.JsonProperty("Comment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Comment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EventNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue EventNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvitationStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvitationStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Key", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Key { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NameAttendeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue NameAttendeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EventAttendee FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EventAttendee>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EventRelatedActivity : Entity
    {
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EventRelatedActivity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EventRelatedActivity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class EventTimeActivity : Entity
    {
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static EventTimeActivity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<EventTimeActivity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinancialPeriod : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<FinancialPeriodDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinancialYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FinancialYear { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NbrOfPeriods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue NbrOfPeriods { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserDefinedPeriods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UserDefinedPeriods { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinancialPeriod FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinancialPeriod>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinancialPeriodDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustmentPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AdjustmentPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInAP", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInAP { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInAR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInAR { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInCA", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInCA { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInFA", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInFA { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInGL", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInGL { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInIN", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInIN { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClosedInPR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ClosedInPR { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinancialPeriodID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FinancialPeriodID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LengthInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LengthInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PeriodNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinancialPeriodDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinancialPeriodDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinancialSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("BillSeparately", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillSeparately { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CashDiscountDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerTaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerTaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntityUsageType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntityUsageType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue InvoiceDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvoiceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OriginalOrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OriginalOrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OriginalOrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OriginalOrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideTaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideTaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinancialSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinancialSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinancialYear : Entity
    {
        [Newtonsoft.Json.JsonProperty("AdjustToPeriodStart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AdjustToPeriodStart { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BelongsToNextYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BelongsToNextYear { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DayOfWeek", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DayOfWeek { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<FinancialYearPeriodDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinancialYearStartsOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue FinancialYearStartsOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstFinancialYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FirstFinancialYear { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstPeriodStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue FirstPeriodStartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("HasAdjustmentPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue HasAdjustmentPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LengthOfFinancialPeriodInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LengthOfFinancialPeriodInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NbrOfFinancialPeriods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue NbrOfFinancialPeriods { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodsStartDayOfWeek", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PeriodsStartDayOfWeek { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PeriodType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UserDefinedPeriods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UserDefinedPeriods { get; set; }
    
        [Newtonsoft.Json.JsonProperty("YearEndCalculationMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue YearEndCalculationMethod { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinancialYear FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinancialYear>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinancialYearPeriodDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PeriodNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinancialYearPeriodDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinancialYearPeriodDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FOBPoint : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPointID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPointID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FOBPoint FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FOBPoint>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InterBranchAccountMapping : Entity
    {
        [Newtonsoft.Json.JsonProperty("OriginatingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OriginatingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostingLedger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostingLedger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionsInDestinationBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InterBranchAccountMappingTransactionInDestinationBranchDetail> TransactionsInDestinationBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionsInSourceBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InterBranchAccountMappingTransactionInSourceBranchDetail> TransactionsInSourceBranch { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InterBranchAccountMapping FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InterBranchAccountMapping>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InterBranchAccountMappingTransactionInDestinationBranchDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountFrom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DestinationBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DestinationBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OffsetAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OffsetAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OffsetSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OffsetSubaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InterBranchAccountMappingTransactionInDestinationBranchDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InterBranchAccountMappingTransactionInDestinationBranchDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InterBranchAccountMappingTransactionInSourceBranchDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountFrom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DestinationBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DestinationBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OffsetAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OffsetAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OffsetSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OffsetSubaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InterBranchAccountMappingTransactionInSourceBranchDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InterBranchAccountMappingTransactionInSourceBranchDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryAllocationInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("Available", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Available { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AvailableForIssue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AvailableForIssue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AvailableForShipping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AvailableForShipping { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BaseUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseUnit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InTransit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue InTransit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InTransitToSO", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue InTransitToSO { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryIssues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue InventoryIssues { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryReceipts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue InventoryReceipts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("KitAssemblyDemand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue KitAssemblyDemand { get; set; }
    
        [Newtonsoft.Json.JsonProperty("KitAssemblySupply", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue KitAssemblySupply { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OnHand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OnHand { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OnLocationNotAvailable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OnLocationNotAvailable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseForSO", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PurchaseForSO { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseForSOPrepared", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PurchaseForSOPrepared { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseOrders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PurchaseOrders { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePrepared", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PurchasePrepared { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseReceipts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PurchaseReceipts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptsForSO", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReceiptsForSO { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryAllocationRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOAllocated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOAllocated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOBackOrdered", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOBackOrdered { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOBooked", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOBooked { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOPrepared", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOPrepared { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOShipped", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOShipped { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SOToPurchase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SOToPurchase { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalAddition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalAddition { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalDeduction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalDeduction { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryAllocationInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryAllocationInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryAllocationRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("AllocationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue AllocationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AllocationType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AllocationType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Expired", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Expired { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryAllocationRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryAllocationRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryItemCrossReference : Entity
    {
        [Newtonsoft.Json.JsonProperty("AlternateID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AlternateID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AlternateType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AlternateType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorOrCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorOrCustomer { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryItemCrossReference FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryItemCrossReference>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryItemUOMConversion : Entity
    {
        [Newtonsoft.Json.JsonProperty("ConversionFactor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ConversionFactor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MultiplyOrDivide", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MultiplyOrDivide { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToUOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryItemUOMConversion FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryItemUOMConversion>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryReceipt : Entity
    {
        [Newtonsoft.Json.JsonProperty("ControlCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryReceiptDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransferNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransferNbr { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryReceipt FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryReceipt>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryReceiptDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryReceiptDetailAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryReceiptDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryReceiptDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventoryReceiptDetailAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventoryReceiptDetailAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventoryReceiptDetailAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventorySummaryInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("ExpandByLotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ExpandByLotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Results", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventorySummaryRow> Results { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventorySummaryInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventorySummaryInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InventorySummaryRow : Entity
    {
        [Newtonsoft.Json.JsonProperty("BaseUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EstimatedTotalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EstimatedTotalCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EstimatedUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EstimatedUnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyAvailable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyAvailable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyAvailableForShipment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyAvailableForShipment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyNotAvailable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyNotAvailable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyOnHand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyOnHand { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InventorySummaryRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InventorySummaryRow>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Invoice : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplicationsCreditMemo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InvoiceApplicationsCreditMemo> ApplicationsCreditMemo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplicationsDefault", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InvoiceApplicationsDefault> ApplicationsDefault { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillingPrinted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillingPrinted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Customer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Customer { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InvoiceDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LinkARAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LinkARAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LinkBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LinkBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InvoiceTaxDetail> TaxDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Invoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Invoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InvoiceApplicationsCreditMemo : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Customer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Customer { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvoiceApplicationsCreditMemo FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvoiceApplicationsCreditMemo>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InvoiceApplicationsDefault : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountTaken", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountTaken { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PaymentDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvoiceApplicationsDefault FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvoiceApplicationsDefault>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InvoiceDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvoiceDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvoiceDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InvoiceTaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("TaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxRate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InvoiceTaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InvoiceTaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemClass : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ItemClassAtrribute> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AvailabilityCalculationRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AvailabilityCalculationRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BaseUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostingClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostingClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchaseUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StockItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue StockItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ValuationMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ValuationMethod { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemClass FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemClass>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemClassAtrribute : Entity
    {
        [Newtonsoft.Json.JsonProperty("AttributeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AttributeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Required", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SortOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue SortOrder { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemClassAtrribute FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemClassAtrribute>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemPriceClassesDetails : Entity
    {
        [Newtonsoft.Json.JsonProperty("PriceClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClassID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemPriceClassesDetails FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemPriceClassesDetails>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemSalesCategory : Entity
    {
        [Newtonsoft.Json.JsonProperty("CategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CategoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Members", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ItemSalesCategoryMember> Members { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentCategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ParentCategoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Path", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Path { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemSalesCategory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemSalesCategory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemSalesCategoryMember : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemStatus { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemSalesCategoryMember FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemSalesCategoryMember>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemsDetails : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemsDetails FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemsDetails>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ItemWarehouse : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultIssueFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultIssueFrom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultReceiptTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultReceiptTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultSubitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultSubitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventorySubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventorySubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MSRP", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MSRP { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideInventoryAccountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideInventoryAccountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverridePreferredVendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverridePreferredVendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverridePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverridePrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideReplenishmentSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideReplenishmentSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideServiceLevelOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideServiceLevelOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideStandardCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideStandardCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreferredLocation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreferredLocation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreferredVendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreferredVendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentSource { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentWarehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentWarehouse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Seasonality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Seasonality { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ServiceLevel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ServiceLevel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ItemWarehouse FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ItemWarehouse>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalTransaction : Entity
    {
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<JournalTransactionDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LedgerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LedgerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TransactionDate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalTransaction FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalTransaction>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalTransactionDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonBillable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NonBillable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorOrCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorOrCustomer { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalTransactionDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalTransactionDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalVoucher : Entity
    {
        [Newtonsoft.Json.JsonProperty("BaseCurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseCurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateTypeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateTypeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<JournalVoucherDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("GLTransactions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<JournalVoucherGLTransaction> GLTransactions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReciprocalRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReciprocalRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TransactionDate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalVoucher FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalVoucher>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalVoucherDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("APDocumentsToApply", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<JournalVoucherDetailAPDocumentToApply> APDocumentsToApply { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARDocumentsToApply", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<JournalVoucherDetailARDocumentToApply> ARDocumentsToApply { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchModule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchModule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CardAccountNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CardAccountNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CardAccountNbrCardAccountNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CardAccountNbrCardAccountNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CashDiscountDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DebitAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DebitSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocCreated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DocCreated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DocTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EntryTypeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EntryTypeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExternalRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("GroupTransactionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue GroupTransactionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludedTaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue IncludedTaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Split", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Split { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SubtotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SubtotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TransactionDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorOrCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorOrCustomer { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalVoucherDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalVoucherDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalVoucherDetailAPDocumentToApply : Entity
    {
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WithTax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WithTax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WithTaxBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WithTaxBalance { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalVoucherDetailAPDocumentToApply FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalVoucherDetailAPDocumentToApply>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalVoucherDetailARDocumentToApply : Entity
    {
        [Newtonsoft.Json.JsonProperty("BalanceWriteOff", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BalanceWriteOff { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WriteOffLimit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WriteOffLimit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WriteOffReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WriteOffReasonCode { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalVoucherDetailARDocumentToApply FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalVoucherDetailARDocumentToApply>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class JournalVoucherGLTransaction : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TransactionDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static JournalVoucherGLTransaction FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<JournalVoucherGLTransaction>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitAssembly : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitAssemblyAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("KitInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue KitInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonStockComponents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitAssemblyNonStockComponent> NonStockComponents { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Revision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Revision { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StockComponents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitAssemblyStockComponent> StockComponents { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitAssembly FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitAssembly>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitAssemblyAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitAssemblyAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitAssemblyAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitAssemblyNonStockComponent : Entity
    {
        [Newtonsoft.Json.JsonProperty("ComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonStockInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue NonStockInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitAssemblyNonStockComponent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitAssemblyNonStockComponent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitAssemblyStockComponent : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitAssemblyStockComponentAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StockInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StockInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitAssemblyStockComponent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitAssemblyStockComponent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitAssemblyStockComponentAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitAssemblyStockComponentAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitAssemblyStockComponentAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitNonStockComponent : Entity
    {
        [Newtonsoft.Json.JsonProperty("AllowComponentQtyVariance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AllowComponentQtyVariance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonStockInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue NonStockInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitNonStockComponent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitNonStockComponent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitSpecification : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsNonStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsNonStock { get; set; }
    
        [Newtonsoft.Json.JsonProperty("KitInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue KitInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NonStockComponents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitNonStockComponent> NonStockComponents { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RevisionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RevisionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StockComponents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<KitStockComponent> StockComponents { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitSpecification FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitSpecification>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KitStockComponent : Entity
    {
        [Newtonsoft.Json.JsonProperty("AllowComponentQtyVariance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AllowComponentQtyVariance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinComponentQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinComponentQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StockInventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StockInventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static KitStockComponent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KitStockComponent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Lead : Entity
    {
        [Newtonsoft.Json.JsonProperty("Activities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ActivityDetail> Activities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address Address { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Campaigns", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CampaignDetail> Campaigns { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompanyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CompanyName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotCall", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotCall { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotFax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotFax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DoNotMail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DoNotMail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Duplicate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DuplicateFound", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DuplicateFound { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Duplicates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DuplicateDetail> Duplicates { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FaxType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("JobTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue JobTitle { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LanguageOrLocale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LanguageOrLocale { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastIncomingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastIncomingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastOutgoingActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastOutgoingActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LeadClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LeadDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LeadID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarketingLists", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<MarketingListDetail> MarketingLists { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoMarketing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NoMarketing { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoMassMail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NoMassMail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OwnerEmployeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OwnerEmployeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Relations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RelationDetail> Relations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourceCampaign", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SourceCampaign { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WebSite { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupDescription { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Lead FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Lead>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LotSerialClass : Entity
    {
        [Newtonsoft.Json.JsonProperty("AssignmentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AssignmentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IssueMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue IssueMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Segments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<LotSerialClassSegment> Segments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TrackExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue TrackExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TrackingMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TrackingMethod { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static LotSerialClass FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<LotSerialClass>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class LotSerialClassSegment : Entity
    {
        [Newtonsoft.Json.JsonProperty("SegmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue SegmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static LotSerialClassSegment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<LotSerialClassSegment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MarketingListDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DynamicList", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DynamicList { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Format", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Format { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ListName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ListName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarketingListID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue MarketingListID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subscribed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Subscribed { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MarketingListDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MarketingListDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class NonStockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<NonStockItemAttribute> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BaseUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseUnit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CrossReferences", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryItemCrossReference> CrossReferences { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrentCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrentCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DefaultPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeferralAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DeferralAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeferralSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DeferralSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpenseAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExpenseAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpenseAccrualAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExpenseAccrualAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpenseAccrualSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExpenseAccrualSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpenseSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExpenseSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsKit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsKit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingCostDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PendingCostDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostingClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostingClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchaseUnit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCodeSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCodeSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireReceipt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireReceipt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireShipment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireShipment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<NonStockItemSalesCategory> SalesCategories { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesUnit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<NonStockItemVendorDetail> VendorDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Volume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Volume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VolumeUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VolumeUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WeightUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WeightUOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static NonStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NonStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class NonStockItemAttribute : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attribute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Attribute { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Required", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Required { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static NonStockItemAttribute FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NonStockItemAttribute>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class NonStockItemSalesCategory : Entity
    {
        [Newtonsoft.Json.JsonProperty("CategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CategoryID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static NonStockItemSalesCategory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NonStockItemSalesCategory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class NonStockItemVendorDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static NonStockItemVendorDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NonStockItemVendorDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Opportunity : Entity
    {
        [Newtonsoft.Json.JsonProperty("Activities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ActivityDetail> Activities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address Address { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BusinessAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactInformation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public OpportunityContact ContactInformation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ConvertedLeadDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ConvertedLeadDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ConvertedLeadID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ConvertedLeadID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyViewState", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CurrencyViewState { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Discount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Discounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<OpportunityDiscount> Discounts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Estimation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Estimation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpportunityID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OpportunityID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Override", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Override { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OwnerEmployeeName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OwnerEmployeeName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Products", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<OpportunityProduct> Products { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Reason { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Relations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<RelationDetail> Relations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourceCampaign", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SourceCampaign { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Stage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Stage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<OpportunityTaxDetail> TaxDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Total", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Total { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WeightTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue WeightTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Opportunity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Opportunity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OpportunityContact : Entity
    {
        [Newtonsoft.Json.JsonProperty("CompanyName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CompanyName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Fax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FaxType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FirstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone1Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone1Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone2Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone2Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Phone3Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Phone3Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Position", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Position { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WebSite { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OpportunityContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OpportunityContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OpportunityDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Currency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Currency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Estimation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Estimation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Probability", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Probability { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Stage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Stage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Total", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Total { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OpportunityDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OpportunityDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OpportunityDiscount : Entity
    {
        [Newtonsoft.Json.JsonProperty("DiscountableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountableQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountableQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItemQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreeItemQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SequenceID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SequenceID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SkipDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SkipDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OpportunityDiscount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OpportunityDiscount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OpportunityProduct : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Discount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountSequence", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountSequence { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExternalPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpportunityProductID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue OpportunityProductID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OpportunityProduct FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OpportunityProduct>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OpportunityTaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("IncludeInVATExemptTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeInVATExemptTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PendingVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReverseVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ReverseVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatisticalVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue StatisticalVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static OpportunityTaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OpportunityTaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Payment : Entity
    {
        [Newtonsoft.Json.JsonProperty("ApplicationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ApplicationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplicationHistory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PaymentApplicationHistoryDetail> ApplicationHistory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AppliedToDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AppliedToDocuments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CardAccountNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CardAccountNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditCardProcessingInfo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CreditCardProcessingDetail> CreditCardProcessingInfo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocumentsToApply", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PaymentDetail> DocumentsToApply { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrdersToApply", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PaymentOrderDetail> OrdersToApply { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PaymentAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Payment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Payment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentApplicationHistoryDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AdjustingDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AdjustingDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustingRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AdjustingRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue AdjustmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustsVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AdjustsVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplicationPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ApplicationPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BalanceWriteOff", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BalanceWriteOff { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CashDiscountDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscountTaken", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CashDiscountTaken { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Customer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Customer { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustedDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AdjustedDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AdjustedRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AdjustedRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DisplayRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DisplayRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VATCreditMemo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VATCreditMemo { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentApplicationHistoryDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentApplicationHistoryDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AmountPaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AmountPaid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BalanceWriteOff", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BalanceWriteOff { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WriteOffReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WriteOffReasonCode { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentMethod : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AllowedCashAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PaymentMethodAllowedCashAccountDetail> AllowedCashAccounts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IntegratedProcessing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IntegratedProcessing { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MeansOfPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MeansOfPayment { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethodID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethodID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProcessingCenters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PaymentMethodProcessingCenterDetail> ProcessingCenters { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireRemittanceInformationforCashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireRemittanceInformationforCashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseInAP", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseInAP { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseInAR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseInAR { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentMethod FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentMethod>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentMethodAllowedCashAccountDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("APDefault", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue APDefault { get; set; }
    
        [Newtonsoft.Json.JsonProperty("APLastRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue APLastRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("APSuggestNextNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue APSuggestNextNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARDefault", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ARDefault { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARDefaultForRefund", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ARDefaultForRefund { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARLastRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ARLastRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ARSuggestNextNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ARSuggestNextNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchLastRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchLastRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseInAP", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseInAP { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseInAR", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseInAR { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentMethodAllowedCashAccountDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentMethodAllowedCashAccountDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentMethodProcessingCenterDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Default", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Default { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProcCenterID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProcCenterID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentMethodProcessingCenterDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentMethodProcessingCenterDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PaymentOrderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AppliedToOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AppliedToOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PaymentOrderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PaymentOrderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Payments : Entity
    {
        [Newtonsoft.Json.JsonProperty("AppliedToOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AppliedToOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PaymentAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransferredtoInvoice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TransferredtoInvoice { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Payments FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Payments>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PhysicalInventoryCount : Entity
    {
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PhysicalInventoryCountDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PhysicalInventoryCount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PhysicalInventoryCount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PhysicalInventoryCountDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BookQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BookQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PhysicalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PhysicalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PhysicalInventoryCountDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PhysicalInventoryCountDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PhysicalInventoryReview : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PhysicalInventoryReviewDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreezeDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue FreezeDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalPhysicalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalPhysicalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalVarianceCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalVarianceCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalVarianceQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalVarianceQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TypeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TypeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PhysicalInventoryReview FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PhysicalInventoryReview>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PhysicalInventoryReviewDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BookQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BookQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedVarianceCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedVarianceCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PhysicalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PhysicalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TagNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue TagNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VarianceQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue VarianceQty { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PhysicalInventoryReviewDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PhysicalInventoryReviewDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProjectTransaction : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ProjectTransactionDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OriginalDocNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OriginalDocNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OriginalDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OriginalDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalBillableQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalBillableQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalQty { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ProjectTransaction FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProjectTransaction>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProjectTransactionDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountGroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountGroupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountGroupDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Allocated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Allocated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BillableQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreditSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DebitAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DebitSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EarningType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue EarningType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Employee", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Employee { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EndDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FinPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Multiplier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Multiplier { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LongValue TransactionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseBillableQtyInAmountFormula", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseBillableQtyInAmountFormula { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorOrCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorOrCustomer { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ProjectTransactionDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProjectTransactionDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseOrder : Entity
    {
        [Newtonsoft.Json.JsonProperty("ControlTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PurchaseOrderDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LineTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PromisedOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue PromisedOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingInstructions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShippingInstructions ShippingInstructions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorRef { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseOrderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AlternateID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AlternateID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Cancelled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Cancelled { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Completed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Completed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompleteOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CompleteOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LineDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LineType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxReceiptPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxReceiptPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinReceiptPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinReceiptPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrigPONbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrigPONbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrigPOType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrigPOType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Promised", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Promised { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyOnReceipts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyOnReceipts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptAction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceiptAction { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceivedAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReceivedAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Requested", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Requested { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseOrderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseOrderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseReceipt : Entity
    {
        [Newtonsoft.Json.JsonProperty("ControlAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreateBill", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CreateBill { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PurchaseReceiptDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceiptNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorRef { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseReceipt FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseReceipt>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseReceiptDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccrualAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccrualAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccrualSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccrualSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<PurchaseReceiptDetailAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LineType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpenQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OpenQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue POLineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POOrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POOrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POOrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POOrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReceiptQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransactionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransactionDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseReceiptDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseReceiptDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseReceiptDetailAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceiptNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNbr { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseReceiptDetailAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseReceiptDetailAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PurchaseSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("POSiteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POSiteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POSource { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PurchaseSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PurchaseSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class RelationDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddToCc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AddToCc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ContactDisplayName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ContactID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue ContactID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Document", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue Document { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DocumentTargetNoteIDDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DocumentTargetNoteIDDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Primary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Primary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RelationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Role", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Role { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RelationDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RelationDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReminderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("IsActive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsActive { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemindAtDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue RemindAtDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemindAtTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue RemindAtTime { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReminderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReminderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReplenishmentParameterStockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("DemandForecastModel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DemandForecastModel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ForecastPeriodType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ForecastPeriodType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LaunchDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LaunchDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxShelfLifeInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue MaxShelfLifeInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Method", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Method { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PeriodsToAnalyze", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue PeriodsToAnalyze { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReorderPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReorderPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentWarehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentWarehouse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SafetyStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SafetyStock { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Seasonality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Seasonality { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ServiceLevel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ServiceLevel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Source", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Source { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TerminationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue TerminationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransferERQ", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TransferERQ { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReplenishmentParameterStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReplenishmentParameterStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReportingGroup : Entity
    {
        [Newtonsoft.Json.JsonProperty("GroupType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue GroupType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReportingGroup FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReportingGroup>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReportingSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("ReportingGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ReportingGroup> ReportingGroups { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAgency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxAgency { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReportingSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReportingSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesInvoice : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Balance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Balance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillingSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BillToSettings BillingSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesInvoiceDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesInvoiceFreightDetail> FreightDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesInvoiceDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Amount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BranchID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BranchID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesInvoiceDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesInvoiceDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesInvoiceFreightDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LineTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PremiumFreightAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PremiumFreightAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalFreightAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalFreightAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Volume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Volume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Weight { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesInvoiceFreightDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesInvoiceFreightDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesOrder : Entity
    {
        [Newtonsoft.Json.JsonProperty("Approved", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Approved { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BaseCurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseCurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address BillToAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToAddressOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillToAddressOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToAddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillToAddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DocContact BillToContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillToContactOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue BillToContactOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Commissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Commissions Commissions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditHold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CreditHold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateTypeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateTypeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerOrder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DestinationWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DestinationWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesOrderDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesOrdersDiscountDetails> DiscountDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExternalRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FinancialSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public FinancialSettings FinancialSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsTaxValid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsTaxValid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModified", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModified { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NewCard", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue NewCard { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentCardIdentifier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentCardIdentifier { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Payments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<Payments> Payments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreAuthorizationNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreAuthorizationNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreAuthorizedAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PreAuthorizedAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreferredWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreferredWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReciprocalRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReciprocalRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequestedOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue RequestedOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Shipments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesOrderShipment> Shipments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShippingSettings ShippingSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address ShipToAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddressOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToAddressOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToAddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DocContact ShipToContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContactOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToContactOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaxDetail> TaxDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Totals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Totals Totals { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VATExemptTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue VATExemptTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VATTaxableTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue VATTaxableTotal { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesOrderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Account", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Account { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesOrderDetailAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AlternateID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AlternateID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AutoCreateIssue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AutoCreateIssue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AverageCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AverageCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Commissionable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Commissionable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Completed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Completed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountedUnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountedUnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExtendedPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ExtendedPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LastModifiedDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LineDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LineType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MarkForPO", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue MarkForPO { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpenQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OpenQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Operation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Operation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OvershipThreshold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OvershipThreshold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POSource { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasingSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PurchaseSettings PurchasingSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyOnShipments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyOnShipments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequestedOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue RequestedOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalespersonID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalespersonID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ShipOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnbilledAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnbilledAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UndershipThreshold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UndershipThreshold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnitPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnitPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesOrderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesOrderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesOrderDetailAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Allocated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AllocWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AllocWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Completed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Completed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyOnShipments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyOnShipments { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyReceived", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyReceived { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedDocument", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedDocument { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ShipOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesOrderDetailAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesOrderDetailAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesOrdersDiscountDetails : Entity
    {
        [Newtonsoft.Json.JsonProperty("DiscountableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountableQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountableQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItemQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreeItemQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ManualDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ManualDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SequenceID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SequenceID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SkipDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SkipDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesOrdersDiscountDetails FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesOrdersDiscountDetails>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesOrderShipment : Entity
    {
        [Newtonsoft.Json.JsonProperty("InventoryDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvoiceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvoiceType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ShipmentDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesOrderShipment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesOrderShipment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Salesperson : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultCommission", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DefaultCommission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsActive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsActive { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Name { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalespersonID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalespersonID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Salesperson FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Salesperson>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesPersonDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CommissionableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CommissionableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CommissionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CommissionAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CommissionPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CommissionPercent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalespersonID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalespersonID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesPersonDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesPersonDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesPriceDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Price { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Promotion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Promotion { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Tax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Tax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesPriceDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesPriceDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesPricesInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("EffectiveAsOf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveAsOf { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceManagerIsMe", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PriceManagerIsMe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceWorkgroupIsMine", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PriceWorkgroupIsMine { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesPriceDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesPriceDetail> SalesPriceDetails { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesPricesInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesPricesInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesPricesWorksheetDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourcePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SourcePrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Tax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Tax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesPricesWorksheetDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesPricesWorksheetDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SalesPriceWorksheet : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverwriteOverlappingPrices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverwriteOverlappingPrices { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesPrices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SalesPricesWorksheetDetail> SalesPrices { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SalesPriceWorksheet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SalesPriceWorksheet>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Shipment : Entity
    {
        [Newtonsoft.Json.JsonProperty("BaseCurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseCurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateTypeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateTypeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyViewState", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CurrencyViewState { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomerID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomerID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShipmentDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCurrency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightCurrency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("GroundCollect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue GroundCollect { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Insurance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Insurance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Operation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Operation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Orders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShipmentOrderDetail> Orders { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackageCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue PackageCount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Packages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShipmentPackage> Packages { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackageWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PackageWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReciprocalRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ReciprocalRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ShipmentDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShipToSettings ShippingSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZoneID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseCustomersAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseCustomersAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Shipment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Shipment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipmentDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShipmentDetailAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreeItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FreeItem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OpenQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OpenQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderLineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue OrderLineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OriginalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OriginalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipmentDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipmentDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipmentDetailAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipmentDetailAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipmentDetailAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipmentOrderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("InventoryDocType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryDocType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryRefNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryRefNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvoiceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InvoiceType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipmentType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipmentType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippedWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippedWeight { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipmentOrderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipmentOrderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipmentPackage : Entity
    {
        [Newtonsoft.Json.JsonProperty("BoxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BoxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CODAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CODAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Confirmed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Confirmed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomRefNbr1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomRefNbr1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CustomRefNbr2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CustomRefNbr2 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeclaredValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DeclaredValue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TrackingNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TrackingNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Weight { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipmentPackage FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipmentPackage>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingBox : Entity
    {
        [Newtonsoft.Json.JsonProperty("ActiveByDefault", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ActiveByDefault { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BoxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BoxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BoxWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BoxWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CarriersPackage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CarriersPackage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Height", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Height { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Length", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Length { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VolumeUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VolumeUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WeightUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WeightUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Width", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Width { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingBox FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingBox>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingInstructions : Entity
    {
        [Newtonsoft.Json.JsonProperty("ShippingDestinationType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingDestinationType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingLocation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingLocation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address ShipToAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddressOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToAddressOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddressValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToAddressValidated { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DocContact ShipToContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContactOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToContactOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingInstructions FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingInstructions>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("CancelByDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CancelByDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Canceled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Canceled { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("GroundCollect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue GroundCollect { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Insurance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Insurance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreferredWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreferredWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Priority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue Priority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ResidentialDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ResidentialDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SaturdayDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SaturdayDelivery { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ScheduledShipmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ScheduledShipmentDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingRule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingRule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipSeparately", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipSeparately { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShopForRates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShopForRates ShopForRates { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseCustomersAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseCustomersAccount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingTerm : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShippingTermDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TermID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TermID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingTerm FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingTerm>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingTermDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InvoiceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue InvoiceAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineHandling", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LineHandling { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingandHandling", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ShippingandHandling { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingTermDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingTermDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShippingZones : Entity
    {
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ZoneID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShippingZones FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShippingZones>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipToSettings : Entity
    {
        [Newtonsoft.Json.JsonProperty("ShipToAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Address ShipToAddress { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToAddressOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToAddressOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DocContact ShipToContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipToContactOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShipToContactOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Validated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Validated { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipToSettings FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipToSettings>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipVia : Entity
    {
        [Newtonsoft.Json.JsonProperty("CalculationMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CalculationMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Calendar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Calendar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CarrierID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CarrierID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CommonCarrier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue CommonCarrier { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightExpenseAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightExpenseAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightExpenseSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightExpenseSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightRates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShipViaFreightRate> FreightRates { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightSalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightSalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightSalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightSalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Packages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ShippingBox> Packages { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipVia FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipVia>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShipViaFreightRate : Entity
    {
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Rate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Rate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Volume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Volume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Weight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ZoneID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShipViaFreightRate FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShipViaFreightRate>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ShopForRates : Entity
    {
        [Newtonsoft.Json.JsonProperty("IsManualPackage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsManualPackage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackageWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PackageWeight { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ShopForRates FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ShopForRates>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StatementCycle : Entity
    {
        [Newtonsoft.Json.JsonProperty("AgingPeriod1EndDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue AgingPeriod1EndDay { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod1Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AgingPeriod1Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod2EndDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue AgingPeriod2EndDay { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod2Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AgingPeriod2Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod3EndDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue AgingPeriod3EndDay { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod3Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AgingPeriod3Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AgingPeriod4Message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AgingPeriod4Message { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ApplyOverdueCharges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ApplyOverdueCharges { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CycleID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CycleID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DayOfMonth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue DayOfMonth { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DayOfMonth1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue DayOfMonth1 { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastStatementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastStatementDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverdueChargeID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OverdueChargeID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrepareOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PrepareOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequireOverdueChargesCalculationBeforeStatement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequireOverdueChargesCalculationBeforeStatement { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RequirePaymentApplicationBeforeStatementProcessing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RequirePaymentApplicationBeforeStatementProcessing { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static StatementCycle FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StatementCycle>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("ABCCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ABCCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeValue> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AutoIncrementalValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AutoIncrementalValue { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AverageCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue AverageCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BaseUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BaseUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Boxes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BoxStockItem> Boxes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Categories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CategoryStockItem> Categories { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Content", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Content { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CrossReferences", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryItemCrossReference> CrossReferences { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrentStdCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrentStdCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultIssueLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultIssueLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DefaultPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultReceiptLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultReceiptLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultSubitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultSubitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeferralAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DeferralAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeferralSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DeferralSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DimensionVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DimensionVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DimensionWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DimensionWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ImageUrl", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ImageUrl { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventorySubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventorySubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsAKit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsAKit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemStatus { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LandedCostVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LandedCostVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LandedCostVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LandedCostVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModified", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModified { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastStdCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastStdCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Markup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Markup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinMarkup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinMarkup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MSRP", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MSRP { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackagingOption", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PackagingOption { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackSeparately", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PackSeparately { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingStdCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingStdCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostingClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostingClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriceWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchaseUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCodeSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCodeSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentParameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<ReplenishmentParameterStockItem> ReplenishmentParameters { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostRevaluationAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostRevaluationAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostRevaluationSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostRevaluationSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SubItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<SubItemStockItem> SubItems { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SubjectToCommission", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SubjectToCommission { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOMConversions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<InventoryItemUOMConversion> UOMConversions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UseOnEntry", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue UseOnEntry { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ValuationMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ValuationMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<StockItemVendorDetail> VendorDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VolumeUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VolumeUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<StockItemWarehouseDetail> WarehouseDetails { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WeightUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WeightUOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static StockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StockItemVendorDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AddLeadTimeDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue AddLeadTimeDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Default", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Default { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EOQ", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue EOQ { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastVendorPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LastVendorPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimeDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimeDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Location { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LotSize { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxOrderQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxOrderQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinOrderFrequencyInDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue MinOrderFrequencyInDays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinOrderQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinOrderQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Override", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Override { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchaseUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchaseUnit { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static StockItemVendorDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StockItemVendorDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class StockItemWarehouseDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("DailyDemandForecast", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DailyDemandForecast { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DailyDemandForecastErrorSTDEV", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DailyDemandForecastErrorSTDEV { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultIssueLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultIssueLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DefaultReceiptLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultReceiptLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventorySubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventorySubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsDefault", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IsDefault { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastForecastDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastForecastDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Override", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Override { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverridePreferredVendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverridePreferredVendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideReplenishmentSettings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideReplenishmentSettings { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideStdCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideStdCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PreferredVendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PreferredVendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriceOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PriceOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("QtyOnHand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue QtyOnHand { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentSource { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReplenishmentWarehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReplenishmentWarehouse { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Seasonality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Seasonality { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ServiceLevel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ServiceLevel { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static StockItemWarehouseDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<StockItemWarehouseDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Subaccount : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Secured", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Secured { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SubaccountCD", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SubaccountCD { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SubaccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SubaccountID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Subaccount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Subaccount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SubItemStockItem : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SegmentID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue SegmentID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Value", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Value { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SubItemStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SubItemStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Task : Entity
    {
        [Newtonsoft.Json.JsonProperty("Body", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Body { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompletedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CompletedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CompletionPercentage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue CompletionPercentage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Internal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Internal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue NoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Parent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue Parent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentSummary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentSummary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Priority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Priority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedActivities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaskRelatedActivity> RelatedActivities { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedEntityDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntityDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RelatedTasks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaskRelatedTask> RelatedTasks { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Reminder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ReminderDetail Reminder { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeActivity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TaskTimeActivity TimeActivity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WorkgroupID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WorkgroupID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Task FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Task>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaskRelatedActivity : Entity
    {
        [Newtonsoft.Json.JsonProperty("Billable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Billable { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Category { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CreatedBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IsCompleteIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue IsCompleteIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Owner { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PriorityIcon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PriorityIcon { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RefNoteID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GuidValue RefNoteID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Released", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Released { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Summary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Workgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Workgroup { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaskRelatedActivity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaskRelatedActivity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaskRelatedTask : Entity
    {
        [Newtonsoft.Json.JsonProperty("CompletedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CompletedAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue DueDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subject { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaskRelatedTask FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaskRelatedTask>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaskTimeActivity : Entity
    {
        [Newtonsoft.Json.JsonProperty("BillableOvertime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableOvertime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BillableTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BillableTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Overtime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Overtime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Project", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Project { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProjectTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProjectTask { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TimeSpent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TimeSpent { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaskTimeActivity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaskTimeActivity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Tax : Entity
    {
        [Newtonsoft.Json.JsonProperty("CalculateOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CalculateOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DeductibleVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue DeductibleVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnterFromTaxBill", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnterFromTaxBill { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExcludeFromTaxonTaxCalculation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ExcludeFromTaxonTaxCalculation { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeInVATExemptTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeInVATExemptTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("IncludeInVATTaxableTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeInVATTaxableTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("NotValidAfter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue NotValidAfter { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PendingVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReverseVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ReverseVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatisticalVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue StatisticalVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAgency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxAgency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxClaimableAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxClaimableAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxClaimableSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxClaimableSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxExpenseAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxExpenseAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxExpenseSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxExpenseSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxPayableAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxPayableAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxPayableSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxPayableSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxSchedule", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaxScheduleDetail> TaxSchedule { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Zones", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaxZoneDetail> Zones { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Tax FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Tax>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxCategory : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaxCategoryTaxDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExcludeListedTaxes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ExcludeListedTaxes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategoryID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxCategory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxCategory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxCategoryTaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CalculateOn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CalculateOn { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashDiscount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxCategoryTaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxCategoryTaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("IncludeInVATExemptTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue IncludeInVATExemptTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PendingVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReverseVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ReverseVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StatisticalVAT", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue StatisticalVAT { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxScheduleDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("DeductibleTaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DeductibleTaxRate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxTaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxTaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinTaxableAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinTaxableAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReportingGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReportingGroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RevisionID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RevisionID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue StartDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxRate { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxScheduleDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxScheduleDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxZone : Entity
    {
        [Newtonsoft.Json.JsonProperty("ApplicableTaxes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TaxZoneApplicableTaxDetail> ApplicableTaxes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZoneID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxZone FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxZone>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxZoneApplicableTaxDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxZoneApplicableTaxDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxZoneApplicableTaxDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TaxZoneDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("DefaultTaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DefaultTaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZoneID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZoneID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TaxZoneDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TaxZoneDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Totals : Entity
    {
        [Newtonsoft.Json.JsonProperty("DiscountTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DiscountTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Freight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Freight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue FreightCost { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightCostIsuptodate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FreightCostIsuptodate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightTaxCategory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightTaxCategory { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineTotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue LineTotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiscTotalAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MiscTotalAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderVolume", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderVolume { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OrderWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue OrderWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PackageWeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PackageWeight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PremiumFreight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PremiumFreight { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TaxTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnbilledAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnbilledAmount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnbilledQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnbilledQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UnpaidBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue UnpaidBalance { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Totals FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Totals>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TransferOrder : Entity
    {
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TransferOrderDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExternalRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ExternalRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PostPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PostPeriod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TotalQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue TotalQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToWarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToWarehouseID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransferType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TransferType { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TransferOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TransferOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TransferOrderDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("Allocations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TransferOrderDetailAllocation> Allocations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TransferOrderDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TransferOrderDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TransferOrderDetailAllocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LotSerialNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LotSerialNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Qty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Qty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SplitLineNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue SplitLineNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Subitem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Subitem { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TransferOrderDetailAllocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TransferOrderDetailAllocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TrialBalance : Entity
    {
        [Newtonsoft.Json.JsonProperty("BatchNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BatchNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Branch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Branch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ControlTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ControlTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreditTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CreditTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DebitTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue DebitTotal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Details", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<TrialBalanceDetail> Details { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ImportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ImportDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ImportNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ImportNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Ledger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Ledger { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Period", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Period { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TrialBalance FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TrialBalance>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TrialBalanceDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("CurrencyYTDBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue CurrencyYTDBalance { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ImportedAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ImportedAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ImportedSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ImportedSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Line", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue Line { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MapNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MapNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MappedAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MappedAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MappedSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MappedSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Selected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Selected { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("YTDBalance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue YTDBalance { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TrialBalanceDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TrialBalanceDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class UnitsOfMeasure : Entity
    {
        [Newtonsoft.Json.JsonProperty("ConversionFactor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ConversionFactor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FromUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FromUOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MultiplyOrDivide", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MultiplyOrDivide { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ToUOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ToUOM { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UnitsOfMeasure FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UnitsOfMeasure>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Vendor : Entity
    {
        [Newtonsoft.Json.JsonProperty("AccountRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountRef { get; set; }
    
        [Newtonsoft.Json.JsonProperty("APAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue APAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("APSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue APSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CashAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Contacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<CustomerContact> Contacts { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyRateType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyRateType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableCurrencyOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableCurrencyOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EnableRateOverride", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue EnableRateOverride { get; set; }
    
        [Newtonsoft.Json.JsonProperty("F1099Box", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue F1099Box { get; set; }
    
        [Newtonsoft.Json.JsonProperty("F1099Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue F1099Vendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FATCA", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue FATCA { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FOBPoint", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FOBPoint { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ForeignEntity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ForeignEntity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LandedCostVendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue LandedCostVendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LeadTimedays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue LeadTimedays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MainContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact MainContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MaxReceipt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MaxReceipt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MinReceipt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue MinReceipt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ParentAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ParentAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentBy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentBy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentInstructions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountPaymentInstructionDetail> PaymentInstructions { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentLeadTimedays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue PaymentLeadTimedays { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaymentMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PaymentMethod { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PaySeparately", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PaySeparately { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PrintOrders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue PrintOrders { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptAction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceiptAction { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceivingBranch", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceivingBranch { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemittanceAddressSameasMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RemittanceAddressSameasMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemittanceContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact RemittanceContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RemittanceContactSameasMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RemittanceContactSameasMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SendOrdersbyEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SendOrdersbyEmail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippersContactSameasMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippersContactSameasMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingAddressSameasMain", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ShippingAddressSameasMain { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Contact ShippingContact { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingTerms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShipVia", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShipVia { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxCalculationMode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxCalculationMode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxRegistrationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxRegistrationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TaxZone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue TaxZone { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Terms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Terms { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ThresholdReceipt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue ThresholdReceipt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorIsLaborUnion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue VendorIsLaborUnion { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorIsTaxAgency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue VendorIsTaxAgency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Warehouse", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Warehouse { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Vendor FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Vendor>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VendorClass : Entity
    {
        [Newtonsoft.Json.JsonProperty("Attributes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<BusinessAccountClassAttributeDetail> Attributes { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ClassID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ClassID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VendorClass FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VendorClass>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VendorPriceDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue Price { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Promotional", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Promotional { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecordID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue RecordID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Vendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue VendorName { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VendorPriceDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VendorPriceDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VendorPricesInquiry : Entity
    {
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ItemClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ItemClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductManager", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductManager { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ProductWorkgroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ProductWorkgroup { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Vendor { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorPriceDetails", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<VendorPriceDetail> VendorPriceDetails { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VendorPricesInquiry FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VendorPricesInquiry>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VendorPriceWorksheet : Entity
    {
        [Newtonsoft.Json.JsonProperty("CreatedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue CreatedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("EffectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue EffectiveDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ExpirationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue ExpirationDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Hold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Hold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LastModifiedDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue LastModifiedDateTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverwriteOverlappingPrices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverwriteOverlappingPrices { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Promotional", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Promotional { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("VendorSalesPrices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<VendorPriceWorksheetDetail> VendorSalesPrices { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VendorPriceWorksheet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VendorPriceWorksheet>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VendorPriceWorksheetDetail : Entity
    {
        [Newtonsoft.Json.JsonProperty("BreakQty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue BreakQty { get; set; }
    
        [Newtonsoft.Json.JsonProperty("CurrencyID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue CurrencyID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LineID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IntValue LineID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PendingPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue PendingPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReferenceNbr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReferenceNbr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SourcePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DecimalValue SourcePrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Tax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Tax { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UOM", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UOM { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Vendor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Vendor { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VendorPriceWorksheetDetail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VendorPriceWorksheetDetail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VoucherEntryCode : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Module", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Module { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ModuleTransactionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ModuleTransactionType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("UniqueTransactionCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue UniqueTransactionCode { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VoucherEntryCode FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VoucherEntryCode>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Warehouse : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSExpenseAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSExpenseAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("COGSExpenseSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue COGSExpenseSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DiscountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DiscountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("DropShipLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue DropShipLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightChargeAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightChargeAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("FreightChargeSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue FreightChargeSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventoryAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventoryAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("InventorySubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue InventorySubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LandedCostVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LandedCostVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LandedCostVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LandedCostVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Locations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<WarehouseLocation> Locations { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiscChargeAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MiscChargeAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("MiscChargeSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue MiscChargeSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("OverrideInventoryAccountSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue OverrideInventoryAccountSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("POAccrualSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue POAccrualSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PurchasePriceVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue PurchasePriceVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReasonCodeSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReasonCodeSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceivingLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ReceivingLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RMALocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RMALocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue SalesSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ShippingLocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue ShippingLocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostRevaluationAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostRevaluationAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostRevaluationSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostRevaluationSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostVarianceAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostVarianceAccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("StandardCostVarianceSubaccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue StandardCostVarianceSubaccount { get; set; }
    
        [Newtonsoft.Json.JsonProperty("WarehouseID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue WarehouseID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Warehouse FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Warehouse>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class WarehouseLocation : Entity
    {
        [Newtonsoft.Json.JsonProperty("Active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue Active { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AssemblyAllowed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue AssemblyAllowed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Description { get; set; }
    
        [Newtonsoft.Json.JsonProperty("LocationID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue LocationID { get; set; }
    
        [Newtonsoft.Json.JsonProperty("PickPriority", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ShortValue PickPriority { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ReceiptsAllowed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue ReceiptsAllowed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("SalesAllowed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue SalesAllowed { get; set; }
    
        [Newtonsoft.Json.JsonProperty("TransfersAllowed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue TransfersAllowed { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static WarehouseLocation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<WarehouseLocation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseAdjustment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Adjustment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseAdjustment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseAdjustment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseBill 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Bill Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseBill FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseBill>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReverseBill 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Bill Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReverseBill FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReverseBill>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertBusinessAccountToCustomer 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertBusinessAccountToCustomer FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertBusinessAccountToCustomer>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertBusinessAccountToVendor 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertBusinessAccountToVendor FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertBusinessAccountToVendor>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MarkBusinessAccountAsValidated 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MarkBusinessAccountAsValidated FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MarkBusinessAccountAsValidated>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ValidateBusinessAccountAddresses 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ValidateBusinessAccountAddresses FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ValidateBusinessAccountAddresses>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ChangeBusinessAccountID 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters Parameters { get; set; } = new Parameters();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ChangeBusinessAccountID FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ChangeBusinessAccountID>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CheckForBusinessAccountDuplicates 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public BusinessAccount Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CheckForBusinessAccountDuplicates FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CheckForBusinessAccountDuplicates>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseCase 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Case Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseCase FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseCase>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TakeCase 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Case Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TakeCase FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TakeCase>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AssignCase 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Case Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AssignCase FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AssignCase>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseCashSale 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public CashSale Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseCashSale FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseCashSale>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseCheck 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Check Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseCheck FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseCheck>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CheckForContactDuplicates 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CheckForContactDuplicates FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CheckForContactDuplicates>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertContactToBusinessAccount 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters2 Parameters { get; set; } = new Parameters2();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertContactToBusinessAccount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertContactToBusinessAccount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CopyFromCompany 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CopyFromCompany FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CopyFromCompany>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MarkContactAsValidated 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MarkContactAsValidated FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MarkContactAsValidated>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ValidateContactAddress 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ValidateContactAddress FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ValidateContactAddress>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CloseContactAsDuplicate 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Contact Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CloseContactAsDuplicate FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CloseContactAsDuplicate>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class UpdateDiscounts 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Discount Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters3 Parameters { get; set; } = new Parameters3();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UpdateDiscounts FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateDiscounts>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SendEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SendEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SendEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateContactEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateContactEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateContactEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateEventEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateEventEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateEventEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateLeadEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateLeadEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateLeadEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateOpportunityEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateOpportunityEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateOpportunityEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateExpenseReceiptEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateExpenseReceiptEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateExpenseReceiptEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateCaseEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateCaseEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateCaseEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateTaskEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateTaskEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateTaskEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class RestoreDeletedEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RestoreDeletedEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RestoreDeletedEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class RestoreArchivedEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RestoreArchivedEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RestoreArchivedEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProcessEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ProcessEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProcessEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SelectSourceEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SelectSourceEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SelectSourceEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class DownloadEmlFileEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DownloadEmlFileEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DownloadEmlFileEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CancelSendingEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CancelSendingEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelSendingEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ArchiveEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ArchiveEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ArchiveEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SelectRelatedEntityEmail 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Email Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters4 Parameters { get; set; } = new Parameters4();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SelectRelatedEntityEmail FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SelectRelatedEntityEmail>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProcessEmailProcessing 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public EmailProcessing Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ProcessEmailProcessing FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProcessEmailProcessing>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProcessAllEmailProcessing 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public EmailProcessing Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ProcessAllEmailProcessing FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProcessAllEmailProcessing>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class AcceptInvitationEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static AcceptInvitationEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AcceptInvitationEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CancelActivityEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CancelActivityEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelActivityEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CompleteEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CompleteEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CompleteEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CompleteAndFollowUpEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CompleteAndFollowUpEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CompleteAndFollowUpEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ExportCardEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ExportCardEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ExportCardEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class RejectInvitationEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static RejectInvitationEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<RejectInvitationEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InviteAllEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InviteAllEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InviteAllEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class InviteEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static InviteEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<InviteEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SelectRelatedEntityEvent 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Event Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters5 Parameters { get; set; } = new Parameters5();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SelectRelatedEntityEvent FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SelectRelatedEntityEvent>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class GeneratePeriods 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public FinancialPeriod Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static GeneratePeriods FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<GeneratePeriods>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseInventoryReceipt 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public InventoryReceipt Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseInventoryReceipt FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseInventoryReceipt>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseInvoice 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Invoice Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReverseInvoice 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Invoice Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReverseInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReverseInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseJournalTransaction 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public JournalTransaction Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseJournalTransaction FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseJournalTransaction>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseJournalVoucher 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public JournalVoucher Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseJournalVoucher FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseJournalVoucher>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseKitAssembly 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public KitAssembly Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseKitAssembly FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseKitAssembly>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CheckLeadForDuplicates 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CheckLeadForDuplicates FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CheckLeadForDuplicates>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CloseLeadAsDuplicate 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CloseLeadAsDuplicate FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CloseLeadAsDuplicate>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertLeadToBAccount 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters6 Parameters { get; set; } = new Parameters6();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertLeadToBAccount FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertLeadToBAccount>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertLeadToContact 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertLeadToContact FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertLeadToContact>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConvertLeadToOpportunity 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConvertLeadToOpportunity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConvertLeadToOpportunity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ValidateLeadAddress 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ValidateLeadAddress FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ValidateLeadAddress>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class MarkLeadAsValidated 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Lead Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static MarkLeadAsValidated FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<MarkLeadAsValidated>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class UpdateStandardCostNonStockItem 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public NonStockItem Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UpdateStandardCostNonStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateStandardCostNonStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateAccountFromOpportunity 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Opportunity Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters7 Parameters { get; set; } = new Parameters7();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateAccountFromOpportunity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateAccountFromOpportunity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateContactFromOpportunity 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Opportunity Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateContactFromOpportunity FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateContactFromOpportunity>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateOpportunityInvoice 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Opportunity Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateOpportunityInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateOpportunityInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CreateOpportunitySalesOrder 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Opportunity Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters8 Parameters { get; set; } = new Parameters8();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CreateOpportunitySalesOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CreateOpportunitySalesOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CaptureCreditCardPayment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Payment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CaptureCreditCardPayment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CaptureCreditCardPayment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleasePayment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Payment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleasePayment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleasePayment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class VoidPayment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Payment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static VoidPayment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<VoidPayment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CancelPhysicalInventory 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public PhysicalInventoryReview Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CancelPhysicalInventory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelPhysicalInventory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CompletePhysicalInventory 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public PhysicalInventoryReview Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CompletePhysicalInventory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CompletePhysicalInventory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class FinishCountingPhysicalInventory 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public PhysicalInventoryReview Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static FinishCountingPhysicalInventory FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<FinishCountingPhysicalInventory>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleasePurchaseReceipt 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public PurchaseReceipt Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleasePurchaseReceipt FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleasePurchaseReceipt>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseSalesInvoice 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public SalesInvoice Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseSalesInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseSalesInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CancelSalesOrder 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public SalesOrder Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CancelSalesOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelSalesOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReopenSalesOrder 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public SalesOrder Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReopenSalesOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReopenSalesOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PrepareSalesInvoice 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public SalesOrder Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PrepareSalesInvoice FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PrepareSalesInvoice>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseSalesPriceWorksheet 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public SalesPriceWorksheet Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseSalesPriceWorksheet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseSalesPriceWorksheet>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ConfirmShipment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Shipment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ConfirmShipment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ConfirmShipment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CorrectShipment 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Shipment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CorrectShipment FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CorrectShipment>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class UpdateIN 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Shipment Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UpdateIN FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateIN>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class UpdateStandardCostStockItem 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public StockItem Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UpdateStandardCostStockItem FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UpdateStandardCostStockItem>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CompleteTask 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Task Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CompleteTask FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CompleteTask>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CompleteAndFollowUpTask 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Task Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CompleteAndFollowUpTask FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CompleteAndFollowUpTask>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class CancelActivityTask 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Task Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CancelActivityTask FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CancelActivityTask>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class SelectRelatedEntityTask 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public Task Entity { get; set; }
    
        /// <summary>The parameters of the action.</summary>
        [Newtonsoft.Json.JsonProperty("parameters", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Parameters9 Parameters { get; set; } = new Parameters9();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static SelectRelatedEntityTask FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<SelectRelatedEntityTask>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseTransferOrder 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public TransferOrder Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseTransferOrder FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseTransferOrder>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TrialBalanceProcess 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public TrialBalance Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TrialBalanceProcess FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TrialBalanceProcess>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TrialBalanceProcessAll 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public TrialBalance Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static TrialBalanceProcessAll FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TrialBalanceProcessAll>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseTrialBalance 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public TrialBalance Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseTrialBalance FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseTrialBalance>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ReleaseVendorPriceWorksheet 
    {
        [Newtonsoft.Json.JsonProperty("entity", Required = Newtonsoft.Json.Required.Always)]
        public VendorPriceWorksheet Entity { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ReleaseVendorPriceWorksheet FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ReleaseVendorPriceWorksheet>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters 
    {
        [Newtonsoft.Json.JsonProperty("BusinessAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BusinessAccountID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters2 
    {
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BAccountID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters2>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters3 
    {
        [Newtonsoft.Json.JsonProperty("Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public DateTimeValue Date { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters3 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters3>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters4 
    {
        [Newtonsoft.Json.JsonProperty("RelatedEntity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters4 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters4>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters5 
    {
        [Newtonsoft.Json.JsonProperty("RelatedEntity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters5 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters5>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters6 
    {
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BAccountID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters6 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters6>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters7 
    {
        [Newtonsoft.Json.JsonProperty("AccountClass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountClass { get; set; }
    
        [Newtonsoft.Json.JsonProperty("AccountName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue AccountName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("BAccountID", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue BAccountID { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters7 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters7>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters8 
    {
        [Newtonsoft.Json.JsonProperty("OrderType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue OrderType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("RecalculatePricesandDiscounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BooleanValue RecalculatePricesandDiscounts { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters8 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters8>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.46.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class Parameters9 
    {
        [Newtonsoft.Json.JsonProperty("RelatedEntity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue RelatedEntity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StringValue Type { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Parameters9 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Parameters9>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.17.3.0 (NJsonSchema v9.10.46.0 (Newtonsoft.Json v11.0.0.0))")]
    [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = true)]
    internal class JsonInheritanceAttribute : System.Attribute
    {
        public JsonInheritanceAttribute(string key, System.Type type)
        {
            Key = key;
            Type = type;
        }
    
        public string Key { get; }
    
        public System.Type Type { get; }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "11.17.3.0 (NJsonSchema v9.10.46.0 (Newtonsoft.Json v11.0.0.0))")]
    internal class JsonInheritanceConverter : Newtonsoft.Json.JsonConverter
    {
        internal static readonly string DefaultDiscriminatorName = "discriminator";
    
        private readonly string _discriminator;
    
        [System.ThreadStatic]
        private static bool _isReading;
    
        [System.ThreadStatic]
        private static bool _isWriting;
    
        public JsonInheritanceConverter()
        {
            _discriminator = DefaultDiscriminatorName;
        }
    
        public JsonInheritanceConverter(string discriminator)
        {
            _discriminator = discriminator;
        }
    
        public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
        {
            try
            {
                _isWriting = true;
    
                var jObject = Newtonsoft.Json.Linq.JObject.FromObject(value, serializer);
                jObject.AddFirst(new Newtonsoft.Json.Linq.JProperty(_discriminator, GetSubtypeDiscriminator(value.GetType())));
                writer.WriteToken(jObject.CreateReader());
            }
            finally
            {
                _isWriting = false;
            }
        }
    
        public override bool CanWrite
        {
            get
            {
                if (_isWriting)
                {
                    _isWriting = false;
                    return false;
                }
                return true;
            }
        }
    
        public override bool CanRead
        {
            get
            {
                if (_isReading)
                {
                    _isReading = false;
                    return false;
                }
                return true;
            }
        }
    
        public override bool CanConvert(System.Type objectType)
        {
            return true;
        }
    
        public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
        {
            var jObject = serializer.Deserialize<Newtonsoft.Json.Linq.JObject>(reader);
            if (jObject == null)
                return null;
    
            var discriminator = Newtonsoft.Json.Linq.Extensions.Value<string>(jObject.GetValue(_discriminator));
            var subtype = GetObjectSubtype(objectType, discriminator);
    
            try
            {
                _isReading = true;
                return serializer.Deserialize(jObject.CreateReader(), subtype);
            }
            finally
            {
                _isReading = false;
            }
        }
    
        private System.Type GetObjectSubtype(System.Type objectType, string discriminator)
        {
            foreach (var attribute in System.Reflection.CustomAttributeExtensions.GetCustomAttributes<JsonInheritanceAttribute>(System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType), true))
            {
                if (attribute.Key == discriminator)
                    return attribute.Type;
            }
    
            return objectType;
        }
    
        private string GetSubtypeDiscriminator(System.Type objectType)
        {
            foreach (var attribute in System.Reflection.CustomAttributeExtensions.GetCustomAttributes<JsonInheritanceAttribute>(System.Reflection.IntrospectionExtensions.GetTypeInfo(objectType), true))
            {
                if (attribute.Type == objectType)
                    return attribute.Key;
            }
    
            return objectType.Name;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "11.17.3.0 (NJsonSchema v9.10.46.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AcumaticaSwaggerException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public AcumaticaSwaggerException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException) 
            : base(message, innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "11.17.3.0 (NJsonSchema v9.10.46.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class AcumaticaSwaggerException<TResult> : AcumaticaSwaggerException
    {
        public TResult Result { get; private set; }

        public AcumaticaSwaggerException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException) 
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}