<?xml version="1.0" encoding="utf-8" ?>
<nlog
    xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Trace"
      internalLogFile="logs\log-trace.txt"
      throwConfigExceptions="true">

  <!-- custom configurations -->
  <!-- TODO: move it from this file -->
  <variable name="allow-time-tracking" value="false" />
  
  <!-- variables -->
  <variable name="date-format" value="${date:format=yyyy-MM-dd HH\:mm\:ss}" />
  <variable name="level-pad" value="${pad:padding=-5:fixedLength=true:${level:uppercase=true}}"/>
  <variable name="logger-pad" value="${pad:padding=-24:fixedLength=true:alignmentOnTruncation=right:${logger}}"/>
  <variable name ="thread-pad" value="${pad:padding=-2:fixedLength=true:${threadid}}"/>
  
  <!-- layouts -->
  <variable name="brief" value="${date-format} | ${level-pad} | ${logger-pad} | ${message}" />
  <variable name="verbose" value="${date-format} | ${level-pad} | ${logger-pad} [${thread-pad}] | ${message} ${onexception:| ${exception:format=ToString}}" />
  <variable name="verbose_inline" value="${replace:inner=${verbose}:searchFor=\\r\\n|\\n:replaceWith= -> :regex=true}" />
  <variable name="console" value="${date-format} | ${level-pad} | ${logger-pad} | ${message}" />
  <variable name="exceptions" value="${date-format} | ${level-pad} | ${logger-pad} | ${processname} | ${thread-pad} | ${message} ${newline} ${exception:format=tostring,Data,exceptionDataSeparator=\r\n}" />

  <targets>

    <!-- write logs to colored console -->
    <target name="coloredConsole" xsi:type="ColoredConsole" layout="${console}" >
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
      <highlight-row condition="level == LogLevel.Info" foregroundColor="Gray" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="Gray" />
    </target>
    
    <!-- write all logs to file -->
    <target name="fullFile" xsi:type="File"
      layout="${verbose_inline}"
      fileName="logs/${shortdate}.log" keepFileOpen="true" />
    <!-- time tracker log -->
    <target name="timeTrackerFile" xsi:type="File"
      layout="${verbose_inline}"
      fileName="logs/${shortdate}.tracktime.log" keepFileOpen="true" />
    
    <!-- write only error logs to file -->
    <target name="errorFile" xsi:type="File"
      layout="${exceptions}"
      fileName="logs/${shortdate}.error.log" keepFileOpen="true" />
    
    <!-- write all as json -->
    <target name="jsonFile" xsi:type="File" fileName="logs/${shortdate}.json.log">
      <layout xsi:type="JsonLayout">
        <attribute name="time" layout="${longdate}" />
        <attribute name="level" layout="${level}" />
        <attribute name="threadId" layout="${threadid}" />
        <attribute name="message" layout="${message}" />
        <attribute name="exception" layout="${exception:format=ToString}" />
        <attribute name="properties" encode="false">
          <layout  xsi:type='JsonLayout' includeAllProperties="true"  maxRecursionLimit="2" />
        </attribute>
      </layout>
    </target>
    
  </targets>
  <rules>
    <logger name="Generation.*" minlevel="Info" writeTo="coloredConsole" />
    <logger name="*" minlevel="Info" writeTo="fullFile" />
    <!--<logger name="*" minlevel="Info" writeTo="jsonFile" />-->
    <!--<logger name="*" minlevel="Warn" maxlevel="Fatal" writeTo="errorFile" />-->
    <!--<logger name="*.TimeTracker" minlevel="Info" writeTo="timeTrackerFile" />-->
  </rules>
</nlog>